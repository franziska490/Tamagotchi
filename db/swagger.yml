openapi: '3.0.3'
info:
  title: Tamagotchi
  description: Rest API für virtuelle Tamagotchi Tiere
  version: '1.0'

paths:
  /pets:
    get:
      tags:
        - Abrufen
      summary: Alle Haustiere abrufen
      responses:
        '200':
          description: Tiere erfolgreich abgerufen
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pet"
        '500':
          description: Fehler beim Abrufen
          content:
            application/json:
              schema:
                type: string
                example: Error

  /pets/{id}:
    get:
      tags:
        - Abrufen
      summary: Ein Tier abrufen über PetID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID des Tiers
      responses:
        '200':
          description: Tier gefunden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        '404':
          description: Tier nicht gefunden
          content:
            application/json:
              schema:
                type: string
                example: No pet was found
        '500':
          description: Fehler beim Abrufen
          content:
            application/json:
              schema:
                type: string
                example: Error

    put:
      tags:
        - Update
      summary: Haustier aktualisieren
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                hunger:
                  type: integer
                energy:
                  type: integer
                mood:
                  type: integer
      responses:
        '200':
          description: Haustier erfolgreich aktualisiert
          content:
            application/json:
              schema:
                type: string
                example: Pet updated
        '404':
          description: Haustier nicht gefunden
          content:
            application/json:
              schema:
                type: string
                example: Update failed
        '500':
          description: Fehler beim Update
          content:
            application/json:
              schema:
                type: string
                example: Error

  /pets/{id}/feed:
    post:
      tags:
        - Aktionen
      summary: Haustier füttern (Hunger steigt)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Gefüttert
          content:
            application/json:
              schema:
                type: string
                example: Pet fed
        '404':
          description: Tier nicht gefunden
          content:
            application/json:
              schema:
                type: string
                example: Feed failed
        '500':
          description: Fehler beim Füttern
          content:
            application/json:
              schema:
                type: string
                example: Error

  /pets/{id}/play:
    post:
      tags:
        - Aktionen
      summary: Mit Haustier spielen (Mood steigt)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Gespielt
          content:
            application/json:
              schema:
                type: string
                example: Pet played with
        '404':
          description: Tier nicht gefunden
          content:
            application/json:
              schema:
                type: string
                example: Play failed
        '500':
          description: Fehler beim Spielen
          content:
            application/json:
              schema:
                type: string
                example: Error

  /pets/{id}/sleep:
    post:
      tags:
        - Aktionen
      summary: Haustier schläft (Energie steigt)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Geschlafen
          content:
            application/json:
              schema:
                type: string
                example: Pet slept
        '404':
          description: Tier nicht gefunden
          content:
            application/json:
              schema:
                type: string
                example: Sleep failed
        '500':
          description: Fehler beim Schlafen
          content:
            application/json:
              schema:
                type: string
                example: Error

  /auth/register:
    post:
      tags:
        - Anmeldung
      summary: Benutzer registrieren
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Registrierung erfolgreich
          content:
            application/json:
              schema:
                type: string
                example: User registered
        '500':
          description: Fehler bei der Registrierung
          content:
            application/json:
              schema:
                type: string
                example: Error

  /auth/login:
    post:
      tags:
        - Anmeldung
      summary: Benutzer einloggen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login erfolgreich
          content:
            application/json:
              schema:
                type: string
                example: Login successful
        '401':
          description: Falsche Zugangsdaten
          content:
            application/json:
              schema:
                type: string
                example: Login failed
        '500':
          description: Fehler beim Login
          content:
            application/json:
              schema:
                type: string
                example: Error

components:
  schemas:
    Pet:
      type: object
      properties:
        petid:
          type: integer
          example: 1
        ownerid:
          type: integer
          example: 1
        name:
          type: string
          example: seali
        hunger:
          type: integer
          example: 80
        energy:
          type: integer
          example: 60
        mood:
          type: integer
          example: 30
      required:
        - petid
        - ownerid
        - name
        - hunger
        - energy
        - mood
